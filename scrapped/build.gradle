buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


repositories {
    mavenCentral()
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
    }
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

check.dependsOn integTest


archivesBaseName  ='db-connect'
group = 'com.github.harshil'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
    integTestCompile sourceSets.test.output
    integTestRuntime configurations.testRuntime

    compile ("org.springframework.boot:spring-boot-starter-web"){
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.6'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.12'

    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    integTestCompile("junit:junit")
}


jar {
    baseName = archivesBaseName
}


task karmaRun(type:Exec){
    workingDir '.'
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        println 'WINDOWS BUILD'
        commandLine 'cmd','/c','karma','start'
    } else {
        commandLine 'karma','start'
    }



}

task jsTest(type: Test)

karmaRun.mustRunAfter jsTest